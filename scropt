-- Aurora X Internal Executor GUI
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- Create Main GUI Container
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AuroraXInternal"
ScreenGui.Parent = game:GetService("CoreGui")

-- Function to Create a UI Element
local function createUIElement(class, properties, parent)
    local element = Instance.new(class)
    for prop, value in pairs(properties) do
        element[prop] = value
    end
    element.Parent = parent
    return element
end

-- Small Toggle Button
local ToggleButton = createUIElement("TextButton", {
    Size = UDim2.new(0, 40, 0, 20),
    Position = UDim2.new(0.5, -20, 0, 10),
    BackgroundColor3 = Color3.fromRGB(20, 20, 20),
    BorderColor3 = Color3.fromRGB(80, 80, 80),
    Text = "T",
    TextColor3 = Color3.fromRGB(255, 255, 255),
    TextSize = 14,
    Font = Enum.Font.SourceSansBold,
}, ScreenGui)

-- Main Frame
local Frame = createUIElement("Frame", {
    Size = UDim2.new(0, 450, 0, 300),
    Position = UDim2.new(0.5, -225, 0.5, -150),
    BackgroundColor3 = Color3.fromRGB(25, 25, 25),
    BorderColor3 = Color3.fromRGB(80, 80, 80),
    Visible = true,
}, ScreenGui)

-- Title Label
createUIElement("TextLabel", {
    Size = UDim2.new(1, 0, 0, 30),
    BackgroundColor3 = Color3.fromRGB(20, 20, 20),
    BorderColor3 = Color3.fromRGB(80, 80, 80),
    Text = "Aurora X Internal",
    TextColor3 = Color3.fromRGB(255, 255, 255),
    TextSize = 18,
    Font = Enum.Font.SourceSansBold,
}, Frame)

-- Textbox for Scripts
local TextBox = createUIElement("TextBox", {
    Size = UDim2.new(1, -20, 0.7, -10),
    Position = UDim2.new(0, 10, 0, 40),
    BackgroundColor3 = Color3.fromRGB(30, 30, 30),
    BorderColor3 = Color3.fromRGB(80, 80, 80),
    TextColor3 = Color3.fromRGB(255, 255, 255),
    TextSize = 14,
    Font = Enum.Font.Code,
    Text = "",
    MultiLine = true,
    ClearTextOnFocus = false,
}, Frame)

-- Buttons Section
local ButtonHolder = createUIElement("Frame", {
    Size = UDim2.new(1, -20, 0, 40),
    Position = UDim2.new(0, 10, 0.75, 0),
    BackgroundColor3 = Color3.fromRGB(25, 25, 25),
}, Frame)

local ExecuteButton = createUIElement("TextButton", {
    Size = UDim2.new(0.3, 0, 1, 0),
    BackgroundColor3 = Color3.fromRGB(40, 40, 40),
    BorderColor3 = Color3.fromRGB(80, 80, 80),
    Text = "Execute",
    TextColor3 = Color3.fromRGB(255, 255, 255),
    TextSize = 14,
    Font = Enum.Font.SourceSansBold,
}, ButtonHolder)

local ClearButton = createUIElement("TextButton", {
    Size = UDim2.new(0.3, 0, 1, 0),
    Position = UDim2.new(0.35, 0, 0, 0),
    BackgroundColor3 = Color3.fromRGB(40, 40, 40),
    BorderColor3 = Color3.fromRGB(80, 80, 80),
    Text = "Clear",
    TextColor3 = Color3.fromRGB(255, 255, 255),
    TextSize = 14,
    Font = Enum.Font.SourceSansBold,
}, ButtonHolder)

local ScriptHubButton = createUIElement("TextButton", {
    Size = UDim2.new(0.3, 0, 1, 0),
    Position = UDim2.new(0.7, 0, 0, 0),
    BackgroundColor3 = Color3.fromRGB(40, 40, 40),
    BorderColor3 = Color3.fromRGB(80, 80, 80),
    Text = "Script Hub",
    TextColor3 = Color3.fromRGB(255, 255, 255),
    TextSize = 14,
    Font = Enum.Font.SourceSansBold,
}, ButtonHolder)

-- Draggable Functionality
local isDragging = false
local dragStart, startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDragging = true
        dragStart = input.Position
        startPos = Frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                isDragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        updateDrag(input)
    end
end)

-- Toggle GUI Visibility
local GuiVisible = true

local function ToggleGUI()
    GuiVisible = not GuiVisible
    Frame.Visible = GuiVisible
end

ToggleButton.MouseButton1Click:Connect(function()
    ToggleGUI()
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.LeftControl then
        ToggleGUI()
    end
end)

-- Button Functionalities
ExecuteButton.MouseButton1Click:Connect(function()
    local success, err = pcall(function()
        loadstring(TextBox.Text)()
    end)
    if not success then
        warn("[Aurora X Internal]: Error executing script: " .. err)
    end
end)

ClearButton.MouseButton1Click:Connect(function()
    TextBox.Text = ""
end)

ScriptHubButton.MouseButton1Click:Connect(function()
    local success, err = pcall(function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-ScriptHub-V3-Best-Mobile-ScriptHub-Keyless-Xeno-Support-22191"))()
    end)
    if not success then
        warn("[Aurora X Internal]: Error loading Script Hub: " .. err)
    end
end)

-- Prevent GUI from Deletion on Character Reset
LocalPlayer.CharacterAdded:Connect(function()
    ScreenGui.Parent = game.CoreGui
end)
